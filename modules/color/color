#!/usr/bin/python3

import platform

class color:
  _colors = dict(zip(["black", "red", "green", "yellow", "blue", "magenta", "cyan", "white"], range(8)))
  def __init__(self, bold=True, fg=None, bg=None):
    self._bold, self._fg, self._bg = bold, fg, bg
  def __getattr__(self, c):
    if c.lower() == "default":
      return __class__()
    if c.lower() == "bold":
      return __class__(not self._bold, self._fg, self._bg)
    if c.lower() in self._colors:
      return __class__(self._bold, **dict({"fg": self._fg, "bg": self._bg}, **{"fg" if c == c.lower() else "bg": self._colors[c.lower()]}))
    if c.lower() == "light":
      g = self._fg if c == c.lower() else self._bg
      if g is not None and g < 16:
        return __class__(self._bold, **dict({"fg": self._fg, "bg": self._bg}, **{"fg" if c == c.lower() else "bg": g + 8 if g < 8 else g - 8}))
      raise KeyError("not system color can not be light")
    if c.lower() == "gray":
      def gray(i):
        if 0 <= i < 26:
          return __class__(self._bold, **dict({"fg": self._fg, "bg": self._bg}, **{"fg" if c == c.lower() else "bg": 16 if i == 0 else i + 231 if i < 25 else 231}))
        raise KeyError("gray should be in [0, 26)")
      return gray
    if c.lower() == "rgb":
      def rgb(r, g, b):
        if 0 <= r < 6 and 0 <= g < 6 and 0 <= b < 6:
          return __class__(self._bold, **dict({"fg": self._fg, "bg": self._bg}, **{"fg" if c == c.lower() else "bg": r * 36 + g * 6 + b + 16}))
        raise KeyError("rgb should be in [0, 6)")
      return rgb
    raise KeyError("color is not correct")
  __getitem__ = __getattr__
  if platform.system() == "Linux":
    def __call__(self, s):
      fg = "" if self._fg is None else f";{self._fg + 30}" if self._fg < 8 else f";{self._fg + 82}" if self._fg < 16 else f";38;5;{self._fg:>03}"
      bg = "" if self._bg is None else f";{self._bg + 40}" if self._bg < 8 else f";{self._bg + 92}" if self._bg < 16 else f";48;5;{self._bg:>03}"
      return "" if s == "" else f"\033[{'1' if self._bold else '0'}{fg}{bg}m{s}\033[0m"
  else:
    def __call__(self, s):
      return s
color = color()

def main():
  print(f'{"System colors":^164}')
  print(f'+{"-" * 64}+{" " * 3}+{"-" * 64}+{" " * 3}+{"-" * 24}+')
  print("|", end="")
  for c in color._colors.keys():
    print(color[c](f'{c:^8}'), end="")
  print(f'|{" " * 3}|', end="")
  for c in color._colors.keys():
    print(color[c].bold(f'{c:^8}'), end="")
  print(f'|{" " * 3}|', end="")
  for c in color._colors.keys():
    print(color[c.upper()](" . "), end="")
  print("|")

  print("|", end="")
  for c in color._colors.keys():
    print(color[c].White(f'{c:^8}'), end="")
  print(f'|{" " * 3}|', end="")
  for c in color._colors.keys():
    print(color[c].White.bold(f'{c:^8}'), end="")
  print(f'|{" " * 3}|', end="")
  for c in color._colors.keys():
    print(color.black[c.upper()](" . "), end="")
  print("|")

  print(f'+--bold{"-" * 58}+{" " * 3}+--regular{"-" * 55}+{" " * 3}+--background{"-" * 12}+')
  print()
  print()


  print(f'{"Gray colors":^164}')
  gray = "-" + "-".join([str(i) for i in range(10)]) + "--" + "--".join([str(i) for i in range(11, 26, 2)])
  print(f'+{gray}+ +{gray}+ +{gray}+')
  print("|", end="")
  for i in range(26):
    print(color.gray(i)("##"), end="")
  print(f'| |', end="")
  for i in range(26):
    print(color.gray(i).bold("##"), end="")
  print(f'| |', end="")
  for i in range(26):
    print(color.white.Gray(i)("  "), end="")
  print("|")

  gray = "--".join([f'{i}' for i in range(10, 26, 2)])
  print(f'+--bold{"-" * 14}{gray}--+ +--regular{"-" * 11}{gray}--+ +--background{"-" * 8}{gray}--+')
  print()
  print()


  print(f'{"RGB colors":^164}')
  print("GB012345+", end="")
  for r in range(1, 6):
    print(f'-R{r}----+', end="")
  print(f'{" " * 5}+', end="")
  for r in range(6):
    print(f'-------+', end="")
  print(f'{" " * 6}+', end="")
  for r in range(6):
    print(f'--------+', end="")
  print()

  for g in range(6):
    print(f'{g}', end="")
    for r in range(6):
      print(" ", end="")
      for b in range(6):
        print(color.rgb(r, g, b)("#"), end="")
      print("|", end="")
    print(f'{" " * 5}', end="")
    for r in range(6):
      print("| ", end="")
      for b in range(6):
        print(color.rgb(r, g, b).bold("#"), end="")
    print(f'|{" " * 5}', end="")
    for r in range(6):
      print(" | ", end="")
      for b in range(6):
        print(color.Rgb(r, g, b)(" "), end="")
    print(" |")

  print(f'+--bold-+', end="")
  for r in range(1, 6):
    print("-------+", end="")
  print(f'{" " * 5}+--regular------+', end="")
  for r in range(2, 6):
    print("-------+", end="")
  print(f'{" " * 6}+--background-----+', end="")
  for r in range(2, 6):
    print("--------+", end="")
  print()
  print()


if __name__ == "__main__":
  main()
